[build]
target = "thumbv7em-none-eabihf"

[unstable]
build-std = ["core"]

#[target.'cfg(all(target_arch = "arm", target_os = "none"))']
#runner = "probe-rs run --chip STM32G431R8"

[target.thumbv7em-none-eabihf]
linker = "C:\\Program Files (x86)\\Arm GNU Toolchain arm-none-eabi\\14.3 rel1\\bin\\arm-none-eabi-gcc.exe"  # Uncomment if you want to use the ARM GNU Toolchain linker
#linker = "arm-none-eabi-gcc"  # Uncomment if you want to use the first arm-none-eabi-gcc in your PATH
rustflags = [
    "-C", "link-arg=-Tcpp_src/c-stm32f415rgt6/STM32F415RGTX_FLASH.ld",  # Linker script
    #"-C", "link-arg=-Tlink.x",
    #"-C", "link-arg=-Tdefmt.x",
    # "-C", "link-arg=-Map=output.map",        # Map file for debugging (rust linker)
    "-C", "link-arg=-Wl,-Map=memory.map",      # Map file for debugging (arm-none-eabi-gcc)
    "-C", "link-arg=-Wl,--print-memory-usage", # Print memory usage (arm-none-eabi-gcc)       
    "-C", "link-arg=-mcpu=cortex-m4",        # Specify the CPU architecture
    "-C", "link-arg=-mthumb",                # Specify the instruction set
    "-C", "link-arg=-mfpu=fpv4-sp-d16",      # Specify the FPU
    "-C", "link-arg=-mfloat-abi=hard",       # Specify the floating-point ABI
    "-C", "link-arg=-Wl,--verbose"            # Enable verbose output from linker (arm-none-eabi-gcc)
]
runner = "python flasher.py --chip STM32F415RG"  # Custom runner script for building, flashing and running

[env]
RUST_BACKTRACE = "1" # Enable backtraces for better error reporting
DEFMT_LOG = "info" # Set the default log level for defmt